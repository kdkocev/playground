package week2;

import java.util.Scanner;

public class Calculator {

    // Метод, който връща резултата от операцията, направена върху 2та операнда
    public static int calculate(int first, int second,  char operation) {
        // Понеже във всички случаи на switch използваме return, няма нужда да пишем break.
        // return спира тази функция и връща резултат.
        switch(operation) {
            case '-': return first - second;
            case '+': return first + second;
            case '*': return first * second;
            case '/': return first / second;
            // Ако нямаме default стойност - трябва да напишем return след края на switch
            // В противен случай няма да знаем какво ще върне функцията ако е подаден странен знак.
            default: return 0;
        }
    }
    
    
    public static void main(String[] args) {
        
        // Ползваме Scanner за въвеждане
        Scanner input = new Scanner(System.in);
        
        // Операндите са числата, който участват в пресмятането
        int[] operands = new int[20];
        // Масив с операторите, които ще ползваме в пресмятането
        char[] operators = new char[20];
        // Писали сме, че масивите ще са с големина 20, защото смятаме, че ще ни стигне.
        // Хубаво е да помислим за начин по който ще можем да въвеждаме безкрайни формули.
        
        // Иницеализираме брояча с -1, защото го инкрементираме (i++) в началото на цикъла.
        int i=-1;
        // Ползваме цикъл do while, защото условието ни е такова, че проверява едната от въведените променливи
        // тоест за да може цикалът да е добър, трябва вече да сме въвели нещо в тази променлива.
        // do {} while цикалът е такъв, че тялото му се пуска поне веднъж винаги.
        // Тоест сме сигурни, че имаме някаква стойност в променливата operators[i] преди условието да се провери.
        do {
            i++;
            
            System.out.println("Input number " + i);
            operands[i] = input.nextInt();
            
            System.out.println("Input operator " + i);
            operators[i] = input.next().charAt(0);
            // Проверка дали последния въведен знак не е =. При наличие на '=' спираме въвеждането
        } while(operators[i] != '=');
        
        // Показваме на екрана въведената формула.
        // Понеже във Java масивите са обекти, можем да кажем operators.length за да вземем дължината на масива
        // вместо да се налага да я помним в друга променлива както във C++
        // Принтирам първо 1вата цифра, защото както и в цикъла за смятане - и този очаква, че има някаква цифра в началото
        System.out.print(operands[0] + " ");
        for (int j = 0; j < operators.length; j++) {
            // когато стигнем до знака '=' - спираме цикъла
            if(operators[j] == '=') break;
            System.out.print(operators[j] + " " + operands[j+1] + " ");
        }
        
        
        // Правим си място, където да изчислим резултата.
        // Знаем че за да може да направим цикъла по лесен начин - трябва
        // в началото на всяка итерация, в result да има резултата от последното изчисление.
        // В самото начало на този цикъл - стойността на result трябва да е стойността на първия операнд
        int result = operands[0];
        
        for(int k=0; operators[k] != '=';k++) {
            // Ползваме вече направената функция calculate, за да изчислим резултата от оператора,
            // приложен върху резултата до сега и следващия операнд
            result = calculate(result, operands[k+1], operators[k]);
        }

        System.out.print(" = " + result);
    }

}
